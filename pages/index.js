import Head from "next/head";
import { getSession } from "next-auth/react";
import {
  Box,
  Button,
  Container,
  Flex,
  Heading,
  Image,
  useColorModeValue,
} from "@chakra-ui/react";
import Link from "next/link";
import Posts from "../components/Posts";

export default function Home() {
  const color = useColorModeValue("black", "white");
  return (
    <>
      <Head>
        <title>Home | All Articles</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container maxW="1000px" padding={1} position="relative">
        <Flex
          alignItems="center"
          justifyContent="space-between"
          position="relative"
          width="100%"
          flexDirection={["column-reverse", "column-reverse", "row", "row"]}
          gap="3"
        >
          <Box flex="1">
            <Heading
              fontWeight="bold"
              opacity="90%"
              color={color}
              fontSize={["3xl", "3xl", "6xl", "6xl"]}
              textAlign={["center", "center", "left", "left"]}
              textShadow="2px 2px #1d1d1d"
            >
              Sharing Experience and fun with others
            </Heading>

            <Box
              marginTop={4}
              display="flex"
              alignItems="center"
              pos="relative"
              justifyContent={["center", "center", "normal", "normal"]}
            >
              <Button size={["sm", "sm", "lg", "lg"]}>
                <Link href="/post">Let&apos;s share!</Link>
              </Button>
            </Box>
          </Box>

          <Box display="flex" justifyContent="center" alignItems="center">
            <Image
              src="/background.jpeg"
              width="100%"
              height="500px"
              borderRadius="8px"
              boxShadow="dark-lg"
            />
          </Box>
        </Flex>
      </Container>

      <Container maxW="1000px" padding={1}>
        <Posts />
      </Container>
    </>
  );
}

export async function getServerSideProps({ req }) {
  const session = await getSession({ req });
  if (!session) {
    return {
      redirect: {
        destination: "/auth",
        permanent: false,
      },
    };
  }
  return {
    props: { session },
  };
}
